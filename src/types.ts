// src/types.ts
// Import the Database type generated by Supabase CLI
import { type Database } from "./db/database.types"; // Make sure this path is correct

// --- Shared Utility Type ---
export type Json = string | number | boolean | null | { [key: string]: Json | undefined } | Json[];

// --- Database Derived Types ---
// Alias types derived from the Supabase generated Database type for better readability
export type MeetingSummaryDbRow = Database["public"]["Tables"]["meeting_summaries"]["Row"];
export type MeetingSummaryDbInsert = Database["public"]["Tables"]["meeting_summaries"]["Insert"];
export type MeetingSummaryDbUpdate = Database["public"]["Tables"]["meeting_summaries"]["Update"];

// --- API Request DTOs ---

/**
 * DTO representing the request body for POST /api/summaries.
 * Matches the API specification for input data.
 */
export interface CreateSummaryRequestDTO {
  file_name?: string | null; // Optional in API, can be null or undefined
  transcription: string; // Required
  summary: string; // Required, max 500 characters
  llm_generated: boolean; // Required
  notes?: string; // Optional (API spec says 'string', can be empty string)
  // NOTE: 'title' is NOT part of the request body based on the original API spec.
}

// --- API Response DTOs ---

/**
 * DTO representing the response body for successful POST /api/summaries (201 Created).
 * Based on the full DB row, mapping modified_at to updated_at, including 'title'.
 */
export type CreateSummaryResponseDTO = Omit<MeetingSummaryDbRow, "modified_at"> & {
  updated_at: MeetingSummaryDbRow["modified_at"]; // API uses 'updated_at'
  // MeetingSummaryDbRow already includes id, user_id, file_name, created_at, transcription, summary, llm_generated, notes, title
};

/**
 * DTO representing a single entry in the list response for GET /api/summaries.
 * Contains basic information for the list view, including 'title' and mapped 'updated_at'.
 * Matches the columns selected in the GET handler's service.
 */
export type MeetingSummaryListEntryDto = Pick<MeetingSummaryDbRow, "id" | "title" | "file_name" | "created_at"> & {
  updated_at: MeetingSummaryDbRow["modified_at"]; // Map DB 'modified_at' to API 'updated_at'
};

/**
 * DTO representing the full list response for GET /api/summaries.
 */
export type MeetingSummaryListDto = MeetingSummaryListEntryDto[];

/**
 * DTO representing the detailed information for a single summary (GET /api/summaries/{id}).
 * Includes all fields from the DB row except user_id, with mapped 'updated_at'.
 */
export type MeetingSummaryDetailsDto = Omit<
  MeetingSummaryDbRow,
  "user_id" | "modified_at" // user_id is omitted, modified_at is mapped
> & {
  updated_at: MeetingSummaryDbRow["modified_at"]; // API uses 'updated_at'
};

// --- Command/Service Layer Internal Types ---
// These types are used within the backend logic (handlers, services, repositories)

/**
 * Type representing the structure of data inserted into the 'meeting_summaries' table.
 * Alias for the Supabase generated Insert type for this table.
 * MUST match the columns required by the DB schema for INSERT.
 */
export type MeetingSummaryInsertData = MeetingSummaryDbInsert;
// Note: According to database.types.ts and migration history (20250420184550_title_column_added.sql),
// INSERT requires: summary, title, transcription, user_id.
// file_name, id, llm_generated, modified_at, notes, created_at are optional in insert.
// Our code needs to *provide* values for the required ones (user_id, summary, title, transcription).

/**
 * Type representing the shape of a FULL row as returned by a SELECT query
 * like `select()`.
 * Alias for the Supabase generated Row type for this table.
 */
export type MeetingSummaryFullRow = MeetingSummaryDbRow;

/**
 * Type representing a subset of columns selected by the GET /api/summaries handler.
 * Explicitly defined to match the `.select()` call in SummaryService.
 */
export type MeetingSummarySelectedColumns = Pick<
  MeetingSummaryDbRow,
  "id" | "title" | "file_name" | "created_at" | "modified_at"
>;

/**
 * Command Model for query parameters for the list summaries endpoint (GET /api/summaries).
 * Represents the parsed and validated query parameters.
 */
export interface ListSummariesCommand {
  sort_by: "created_at" | "updated_at"; // API terms
  sort_order: "asc" | "desc";
  from_dt?: string; // ISO 8601 string
  to_dt?: string; // ISO 8601 string
}

/**
 * Type for parameters passed to the SummaryService's list method.
 * Uses Date objects for date range and DB column names for sorting.
 */
export interface ListSummariesServiceParams {
  userId: string;
  dateRange: { from?: Date; to?: Date };
  sortParams: {
    by: "created_at" | "modified_at"; // Service internal uses DB column names
    order: "asc" | "desc";
  };
}

// --- Other Command Models (if needed for other endpoints) ---

/**
 * Command Model for the Generate Summary action (POST /api/generate-summary).
 */
export interface GenerateSummaryCommand {
  transcription: string; // The transcription text to summarize
}

/**
 * DTO representing the response from the Generate Summary action.
 */
export interface GenerateSummaryResponseDto {
  summary: string; // The generated summary text
}

// Note: Endpoint DELETE /api/summaries/{id} returns 204 No Content,
// so doesn't require a response DTO definition.

// Note: Endpoint PUT /api/summaries/{id} would likely need an UpdateMeetingSummaryCommand
// and an UpdateMeetingSummaryResponseDto, similar to Create.
